<?xml version="1.0"?>
<!--
Build file for Apache Ant (http://ant.apache.org/)

$Id$
$Source$
-->

<project name="GoGui" default="all">

<tstamp/>

<property file="build.properties"/>

<property environment="env"/>

<property name="findbugs.home" value="${env.FINDBUGS_HOME}"/>

<property name="pmd.home" value="${env.PMD_HOME}"/>

<property name="docbook.name" value="docbook-xsl-1.68.1"/>

<property name="docbook.path" value="external/docbook/${docbook.name}"/>

<property name="scripts" value="
 gogui
 gtpdisplay
 gtpregress
 gtpstatistics
 gtpterminal
 gmptogtp
 gtpadapter
 gtpdummy
 gtpserver
 netgtp
 sgftotex
 sgfthumbnail
 twogtp
"/>

<available property="docbook.available"
 file="${docbook.path}/html/chunk.xsl"/>

<available property="comm-available"
 file="external/javacomm/commapi/comm.jar"/>

<available property="looks.available"
 file="external/jgoodies/looks-2.1.1/looks-2.1.1.jar"/>

<condition property="build.notdist">
<not>
<and>
<istrue value="${optimize}"/>
<isfalse value="${debug}"/>
</and>
</not>
</condition>

<target name="all"
 description="Compile all programs (default target)"
 depends="
  gmptogtp.jar,
  gogui.jar,
  gtpadapter.jar,
  gtpdisplay.jar,
  gtpdummy.jar,
  gtpregress.jar,
  gtpstatistics.jar,
  gtpserver.jar,
  gtpterminal.jar,
  netgtp.jar,
  sgftotex.jar,
  sgfthumbnail.jar,
  twogtp.jar
"/>

<target name="check-dist-settings" unless="no-check-dist-settings">
<fail if="build.notdist" message="Not dist settings in build.properties"/>
</target>

<target name="clean" depends="clean-build-dir"
 description="Delete class and jar files built by target all">
<delete failonerror="false" includeEmptyDirs="true">
<fileset dir="lib"
 includes="
   comm.jar,
   gmptogtp.jar,
   gogui.jar,
   gtpadapter.jar,
   gtpdisplay.jar,
   gtpdummy.jar,
   gtpregress.jar,
   gtpserver.jar,
   gtpstatistics.jar,
   gtpterminal.jar,
   looks-2.1.1.jar,
   netgtp.jar,
   sgftotex.jar,
   sgfthumbnail.jar,
   twogtp.jar
  "
/>
</delete>
</target>

<target name="clean-build-dir">
<delete failonerror="false" includeEmptyDirs="true">
<fileset dir="build/depcache"/>
<fileset dir="build/depcache-test"/>
<fileset dir="build/net"/>
<fileset dir="build/test"/>
<fileset dir="build/GoGui.app"/>
<fileset dir="build" includes="GoGui*.dmg"/>
</delete>
</target>

<target name="check" depends="docvalidate,junit,regress"
 description="Run all tests"/>

<target name="compile" depends="extract-comm.jar,depend,version,doc">
<mkdir dir="build"/>
<javac srcdir="src" destdir="build" source="1.4" target="1.4"
 deprecation="true" optimize="${optimize}"
 debug="${debug}" listfiles="yes"
 classpath="external/javacomm/commapi/comm.jar"/>
<copy todir="build">
<fileset dir="src" includes="net/sf/gogui/images/*.png"/>
</copy>
<copy todir="build/net/sf/gogui/doc">
<fileset dir="doc/manual/html" includes="*.html *.png"/>
</copy>
<copy todir="build/net/sf/gogui/config">
<fileset dir="config" includes="analyze-commands"/>
</copy>
</target>

<target name="depend">
<depend srcdir="src" destdir="build" cache="build/depcache"/>
</target>

<target name="dist" depends="check-dist-settings,all,check,man">
<zip destfile="gogui-${version}.zip">
<zipfileset prefix="gogui-${version}" dir="." includes="
 README
 CONTRIBUTE
 COPYING
 INSTALL
 TODO
 build.properties
 build.xml
 config/analyze-commands*
 config/gogui*.desktop
 config/gogui-application-x-go-sgf.png
 config/gogui.omf
 config/gogui.schemas
 config/gogui.xml
 config/x-go-sgf.desktop
 doc/README
 doc/manual/html/*.html
 doc/manual/html/*.png
 doc/manual/man/*.1
 doc/manual/xml/*.xml
 doc/manual/xml/*.xml.in
 doc/manual/xml/*.xsl
 doc/doxygen/Doxyfile
 doc/doxygen/footer.html
 doc/doxygen/README
 ${docbook.path}.zip
 external/javacomm/javacomm20-win32.zip
 external/javacomm/README
 external/jgoodies/looks-2_1_1.zip
 lib/*.jar
 mac/packaging/GoGui.icns
 mac/packaging/Info.plist
 mac/packaging/Info.plist.in
 mac/packaging/PkgInfo
 mac/src/net/sf/gogui/specialmac/RegisterSpecialMacHandler.java
 mac/src/net/sf/gogui/specialmac/RegisterSpecialMacHandler.class
 mac/src/net/sf/gogui/specialmac/Listener.class  
 sgf/openings/9x9/README
 sgf/openings/9x9/*.sgf
 sgf/openings/19x19/README
 sgf/openings/19x19/*.sgf
 src/net/sf/gogui/images/*.png
 src/net/sf/gogui/overview.html
 src/net/sf/gogui/*/package.html
 src/net/sf/gogui/*/*.java
 src/net/sf/gogui/*/*.java.in
 test/findbugs/gogui.fb
 test/checkstyle/checkstyle_checks.xml
 test/junit/src/net/sf/gogui/*/*.java
 test/junit/src/net/sf/gogui/*/*.sgf
 test/pmd/ruleset.xml
 test/regress/*.tst
" />
<zipfileset prefix="gogui-${version}" dir="." filemode="755" includes="
 install.sh,
 bin/gmptogtp,
 bin/gogui,
 bin/gtpadapter,
 bin/gtpdisplay,
 bin/gtpdummy,
 bin/gtpregress,
 bin/gtpserver,
 bin/gtpstatistics,
 bin/gtpterminal,
 bin/netgtp,
 bin/sgftotex,
 bin/sgfthumbnail,
 bin/twogtp,
" />
</zip>
</target>

<target name="doc" depends="extract-docbook,doc-check-uptodate"
 unless="doc-uptodate"
 description="Generate documentation using xsltproc">
<echo message="Running xsltproc"/>
<exec executable="xsltproc">
<arg line="--path ${docbook.path}/html"/>
<arg line="-o doc/manual/html/"/>
<arg line="doc/manual/xml/custom.xsl"/>
<arg line="doc/manual/xml/book.xml"/>
</exec>
<!-- Remove empty div sections that create unwanted space in JEditorPane -->
<replace dir="doc/manual/html" includes="*.html"
 token="&lt;div&gt;&lt;/div&gt;" encoding="UTF-8"/>
<copy todir="doc/manual/html">
<fileset dir="src/net/sf/gogui/images" includes="project-support.png"/>
</copy>
</target>

<!--
Generate documentation using ant style target.
Not used at present due to problems with mdash in output (not understood
by JEditorPane, slow speed and errors with old versions of Xalan)
-->
<target name="doc-style" depends="extract-docbook,doc-check-uptodate"
 unless="doc-uptodate">
<style basedir="doc/manual/xml" includes="book.xml" destdir="doc/manual/html"
 style="${docbook.path}/html/chunk.xsl" force="true">
<xmlcatalog>
<dtd
 publicId="http://docbook.sourceforge.net/release/xsl/current/html/chunk.xsl"
 location="${docbook.path}/html/chunk.xsl"/>
</xmlcatalog>
</style>
<copy todir="doc/manual/html">
<fileset dir="src/net/sf/gogui/images" includes="project-support.png"/>
</copy>
</target>

<target name="docvalidate">
<xmlvalidate file="doc/manual/xml/book.xml"/>
</target>

<target name="doc-check-uptodate">
<uptodate property="doc-uptodate" targetfile="doc/manual/html/index.html">
<srcfiles dir= "doc/manual/xml" includes="*.xml"/>
<srcfiles dir= "doc/manual/xml" includes="*.xsl"/>
</uptodate>
</target>

<target name="doxygen"
 description="Generate source code documentation using doxygen">
<exec executable="doxygen" dir="doc/doxygen"/>
</target>

<target name="extract-comm.jar" unless="comm-available">
<unzip src="external/javacomm/javacomm20-win32.zip" dest="external/javacomm">
<patternset>
<include name="commapi/comm.jar"/>
</patternset>
</unzip>
</target>

<target name="extract-docbook" unless="docbook.available">
<unzip src="${docbook.path}.zip" dest="external/docbook">
<patternset>
<include name="${docbook.name}/VERSION"/>
<include name="${docbook.name}/common/*"/>
<include name="${docbook.name}/html/*"/>
<include name="${docbook.name}/lib/*"/>
<include name="${docbook.name}/manpages/*"/>
</patternset>
</unzip>
</target>

<target name="extract-looks" unless="looks.available">
<unzip src="external/jgoodies/looks-2_1_1.zip" dest="external/jgoodies">
<patternset>
<include name="looks-2.1.1/looks-2.1.1.jar"/>
</patternset>
</unzip>
</target>

<target name="findbugs" depends="compile"
 description="Invoke FindBugs (with exec)">
<mkdir dir="test/findbugs"/>
<exec executable="${findbugs.home}/bin/findbugs"
 output="test/findbugs/output.xml" logError="true">
<arg line="-textui"/>
<arg line="-project test/findbugs/gogui.fb"/>
<arg line="-low"/>
<arg line="-xml"/>
<arg line="-auxclasspath external/javacomm/commapi/comm.jar"/>
</exec>
</target>

<target name="gmptogtp.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gmptogtp.jar">
<manifest>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
<attribute name="Main-Class" value="net.sf.gogui.gmptogtp.Main"/>
<attribute name="Class-Path" value="comm.jar"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/gmp/*.class
 net/sf/gogui/gmptogtp/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
<copy file="external/javacomm/commapi/comm.jar" todir="lib"/>
</target>

<target name="gogui.app" depends="gogui.jar"
 description="Make Mac application bundle">
<property name="appdir" value="build/GoGui.app"/>
<mkdir dir="${appdir}"/>
<mkdir dir="${appdir}/Contents"/>
<mkdir dir="${appdir}/Contents/bin"/>
<mkdir dir="${appdir}/Contents/MacOS"/>
<mkdir dir="${appdir}/Contents/Resources"/>
<mkdir dir="${appdir}/Contents/Resources/Java"/>
<copy file="/System/Library/Frameworks/JavaVM.framework/Versions/Current/Resources/MacOS/JavaApplicationStub"
  todir="${appdir}/Contents/MacOS"/>
<exec executable="chmod">
<arg line="755 ${appdir}/Contents/MacOS/JavaApplicationStub"/>
</exec>
<copy todir="${appdir}/Contents" overwrite="true">
<fileset dir="mac/packaging" includes="Info.plist PkgInfo"/>
</copy>
<copy todir="${appdir}/Contents/Resources" overwrite="true">
<fileset dir="mac/packaging" includes="GoGui.icns"/>
</copy>
<copy todir="${appdir}/Contents/Resources/GoGui Help" overwrite="true">
<fileset dir="doc/manual/html" includes="*.html *.png"/>
</copy>
<replace file="${appdir}/Contents/Resources/GoGui Help/index.html"
 token="&lt;head&gt;"
 value="&lt;head&gt;&lt;meta name=&quot;AppleTitle&quot; content=&quot;GoGui Help&quot;&gt;"/>
<copy todir="${appdir}/Contents/Resources/Java" overwrite="true">
<fileset dir="lib" includes="*.jar"/>
</copy>
<copy todir="${appdir}/Contents/bin" overwrite="true">
<fileset dir="bin" includes="${scripts}"/>
</copy>
<replace dir="${appdir}/Contents/bin" includes="${scripts}"
 token="/../lib" value="/../Resources/Java"/>
<chmod dir="${appdir}/Contents/bin" includes="${scripts}" perm="755"/>
<exec executable="/Developer/Tools/SetFile">
<arg line="-a B ${appdir}"/>
</exec>
</target>

<target name="gogui.dmg" depends="gogui.app"
 description="Make Mac compressed disk image">
<exec executable="hdiutil">
<arg line="create -fs HFS+ -format UDZO -volname GoGui-${version} -srcfolder build/GoGui.app build/GoGui-${version}.dmg"/>
</exec>
</target>

<target name="gogui.jar" depends="compile,extract-looks">
<mkdir dir="lib"/>
<jar destfile="lib/gogui.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gogui.MainWrapper"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
<attribute name="Class-Path" value="looks-2.1.1.jar"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/config/analyze-commands
 net/sf/gogui/doc/*.html
 net/sf/gogui/doc/*.png
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gogui/*.class
 net/sf/gogui/gui/*.class
 net/sf/gogui/images/*.png
 net/sf/gogui/sgf/*.class
 net/sf/gogui/tex/*.class
 net/sf/gogui/thumbnail/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/Version.class
"/>
<fileset dir="mac/src" includes="
 net/sf/gogui/specialmac/*.class
"/>
</jar>
<copy file="external/jgoodies/looks-2.1.1/looks-2.1.1.jar" todir="lib"/>
</target>

<target name="gtpadapter.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpadapter.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpadapter.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gtpadapter/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
</target>

<target name="gtpdisplay.jar" depends="compile,extract-looks">
<mkdir dir="lib"/>
<jar destfile="lib/gtpdisplay.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpdisplay.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
<attribute name="Class-Path" value="looks-2.1.1.jar"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gui/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gtpdisplay/*.class
 net/sf/gogui/images/gogui*.png
 net/sf/gogui/images/wood.png
 net/sf/gogui/sgf/SgfFilter.class
 net/sf/gogui/tex/TexFilter.class
 net/sf/gogui/utils/ErrorMessage.class
 net/sf/gogui/utils/MessageQueue.class
 net/sf/gogui/utils/Platform.class
 net/sf/gogui/utils/ProgressShow.class
 net/sf/gogui/utils/Options.class
 net/sf/gogui/utils/RadialGradient*.class
 net/sf/gogui/utils/SquareLayout.class
 net/sf/gogui/utils/StringUtils.class
 net/sf/gogui/version/Version.class
"/>
</jar>
<copy file="external/jgoodies/looks-2.1.1/looks-2.1.1.jar" todir="lib"/>
</target>

<target name="gtpdummy.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpdummy.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpdummy.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gtpdummy/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
</target>

<target name="gtpregress.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpregress.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpregress.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/go/GoColor.class
 net/sf/gogui/go/Move.class
 net/sf/gogui/go/GoPoint*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gtpregress/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/Version.class
"/>
</jar>
</target>

<target name="gtpserver.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpserver.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpserver.GtpServer"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/gtpserver/*.class
 net/sf/gogui/utils/ErrorMessage.class
 net/sf/gogui/utils/Options.class
 net/sf/gogui/utils/ProcessUtils*.class
 net/sf/gogui/utils/StreamCopy.class
 net/sf/gogui/utils/StringUtils.class
 net/sf/gogui/version/Version.class
"/>
</jar>
</target>

<target name="gtpstatistics.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpstatistics.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpstatistics.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gui/*.class
 net/sf/gogui/gtpstatistics/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
</target>

<target name="gtpterminal.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/gtpterminal.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.gtpterminal.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/gtpterminal/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/utils/ErrorMessage.class
 net/sf/gogui/utils/FileUtils.class
 net/sf/gogui/utils/MessageQueue.class
 net/sf/gogui/utils/Options.class
 net/sf/gogui/utils/ProcessUtils*.class
 net/sf/gogui/utils/ProgressShow*.class
 net/sf/gogui/utils/StringUtils.class
 net/sf/gogui/version/Version.class
"/>
</jar>
</target>

<target name="javadoc"
 description="Create Javadoc documentation for public parts of packages">
<javadoc sourcepath="src" destdir="doc/javadoc" source="1.4"
 windowtitle="GoGui Source Documentation"
 overview="src/net/sf/gogui/overview.html"
 classpath="external/javacomm/commapi/comm.jar"
 packagenames="
  net/sf/gogui/game.*,
  net/sf/gogui/gmp.*,
  net/sf/gogui/gmptogtp.*,
  net/sf/gogui/go.*,
  net/sf/gogui/gogui.*,
  net/sf/gogui/gtp.*,
  net/sf/gogui/gtpadapter.*,
  net/sf/gogui/gtpdisplay.*,
  net/sf/gogui/gtpdummy.*,
  net/sf/gogui/gtpregress.*,
  net/sf/gogui/gtpserver.*,
  net/sf/gogui/gtpstatistics.*,
  net/sf/gogui/gtpterminal.*,
  net/sf/gogui/gui.*,
  net/sf/gogui/netgtp.*,
  net/sf/gogui/sgf.*,
  net/sf/gogui/sgftotex.*,
  net/sf/gogui/tex.*,
  net/sf/gogui/thumbnail.*,
  net/sf/gogui/twogtp.*,
  net/sf/gogui/utils.*,
  net/sf/gogui/version.*
">
<tag name="bug" scope="all" description="Bugs:"/>
<tag name="todo" scope="all" description="To do:"/>
</javadoc>
</target>

<target name="junit" depends="compile,junit-compile"
 description="Run JUnit tests (define property testcase for a single test)" >
<junit printsummary="withOutAndErr" fork="true" timeout="60000"
 haltonfailure="true">
<assertions><enable/></assertions>
<classpath>
<pathelement location="build"/>
<pathelement location="build/test"/>
</classpath>
<formatter type="brief" usefile="false"/>
<test name="${testcase}" todir="build" if="testcase"/>
<batchtest todir="build" unless="testcase">
<fileset dir="build/test" includes="**/*Test.class"/>
</batchtest>
</junit>
</target>

<target name="junit-compile" depends="compile,test-depend"
 description="Compile JUnit tests">
<mkdir dir="build/test"/>
<javac srcdir="test/junit/src" destdir="build/test" source="1.4" target="1.4"
 deprecation="true" optimize="${optimize}" debug="${debug}" listfiles="yes"
 classpath="build"/>
<copy todir="build/test">
<fileset dir="test/junit/src" includes="net/sf/gogui/*/*.sgf"/>
</copy>
</target>

<target name="man" depends="extract-docbook">
<exec executable="xsltproc">
<arg line="--param chunk.quietly 1"/>
<arg line="-o doc/manual/man/"/>
<arg line="${docbook.path}/manpages/docbook.xsl"/>
<arg line="doc/manual/xml/manpages.xml"/>
</exec>
</target>

<target name="netgtp.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/netgtp.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.netgtp.NetGtp"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/netgtp/*.class
 net/sf/gogui/utils/ErrorMessage.class
 net/sf/gogui/utils/Options.class
 net/sf/gogui/utils/StreamCopy.class
 net/sf/gogui/utils/StringUtils.class
 net/sf/gogui/version/Version.class
"/>
</jar>
</target>

<target name="pmd" depends="compile"
 description="Run PMD (pmd.sourceforge.net)">
<mkdir dir="test/pmd"/>
<exec executable="${pmd.home}/bin/pmd.sh"
 output="test/pmd/output.txt">
<arg line="src"/>
<arg line="emacs"/>
<arg line="test/pmd/ruleset.xml"/>
</exec>
</target>

<target name="regress"
 depends="gmptogtp.jar,gtpdummy.jar,gtpregress.jar,gtpserver.jar,netgtp.jar,twogtp.jar"
 description="Run GTP regression tests (requires GNU Go 3.6)">
<mkdir dir="test/regress/html"/>
<echo>gmptogtp</echo>
<java jar="lib/gtpregress.jar" fork="true" failonerror="true"
 dir="test/regress">
<assertions><enable/></assertions>
<arg value="-output"/><arg value="html/gmptogtp"/>
<arg value="java -ea -cp ../../lib/gmptogtp.jar:../../external/javacomm/commapi/comm.jar net.sf.gogui.gmptogtp.Main -color black &quot;gnugo --mode gmp&quot;"/>
<arg value="gmptogtp.tst"/>
</java>
<echo>gtpadapter</echo>
<java jar="lib/gtpregress.jar" fork="true" failonerror="true"
 dir="test/regress">
<assertions><enable/></assertions>
<arg value="-output"/><arg value="html/gtpadapter"/>
<arg value="java -ea -jar ../../lib/gtpdummy.jar"/>
<arg value="gtpadapter.tst"/>
</java>
<echo>gtpdummy</echo>
<java jar="lib/gtpregress.jar" fork="true" failonerror="true"
 dir="test/regress">
<assertions><enable/></assertions>
<arg value="-output"/><arg value="html/gtpdummy"/>
<arg value="java -ea -jar ../../lib/gtpdummy.jar"/>
<arg value="gtpdummy.tst"/>
</java>
<echo>netgtp</echo>
<java jar="lib/gtpserver.jar" fork="true" spawn="true">
<assertions><enable/></assertions>
<arg value="-port"/><arg value="9696"/>
<arg value="java -jar lib/gtpdummy.jar"/>
</java>
<java jar="lib/gtpregress.jar" fork="true" failonerror="true"
 dir="test/regress">
<arg value="-output"/><arg value="html/netgtp"/>
<arg value="java -ea -jar ../../lib/netgtp.jar localhost 9696"/>
<arg value="netgtp.tst"/>
</java>
<echo>twogtp</echo>
<java jar="lib/gtpregress.jar" fork="true" failonerror="true"
 dir="test/regress">
<assertions><enable/></assertions>
<arg value="-output"/><arg value="html/twogtp"/>
<arg value="java -ea -jar ../../lib/twogtp.jar -black &quot;java -ea -jar ../../lib/gtpdummy.jar&quot; -white &quot;gnugo --mode gtp&quot;"/>
<arg value="twogtp.tst"/>
</java>
<echo>OK</echo>
</target>

<target name="run" depends="gogui.jar" description="Run GoGui">
<java jar="lib/gogui.jar" fork="true"/>
</target>

<target name="sgftotex.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/sgftotex.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.sgftotex.SgfToTex"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/sgftotex/*.class
 net/sf/gogui/tex/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
</target>

<target name="sgfthumbnail.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/sgfthumbnail.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.thumbnail.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gui/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/thumbnail/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/*.class
"/>
</jar>
</target>

<target name="specialmac" depends="compile"
 description="Compile special MAC classes depending on com.apple">
<javac srcdir="mac/src" source="1.4" deprecation="true" classpath="build"
 optimize="true" listfiles="yes"
 includes="net/sf/gogui/specialmac/RegisterSpecialMacHandler.java"/>
</target>

<target name="tags"
 description="Build a TAGS file for Emacs" >
<exec executable="sh">
<arg line="-c 'etags `find src test/junit/src -name &quot;*.java&quot;`'" />
</exec>
</target>

<target name="test-depend">
<depend srcdir="test" destdir="build/test" cache="build/depcache-test"/>
</target>

<target name="twogtp.jar" depends="compile">
<mkdir dir="lib"/>
<jar destfile="lib/twogtp.jar">
<manifest>
<attribute name="Main-Class" value="net.sf.gogui.twogtp.Main"/>
<attribute name="Built-By" value="${user.name}"/>
<attribute name="Build-Date" value="${DSTAMP} ${TSTAMP}"/>
</manifest>
<fileset dir="build" includes="
 net/sf/gogui/game/*.class
 net/sf/gogui/go/*.class
 net/sf/gogui/gtp/*.class
 net/sf/gogui/sgf/*.class
 net/sf/gogui/twogtp/*.class
 net/sf/gogui/utils/*.class
 net/sf/gogui/version/Version.class
"/>
</jar>
</target>

<target name="version" depends="version-check-uptodate"
 unless="version-uptodate">
<copy
file="src/net/sf/gogui/version/Version.java.in"
tofile="src/net/sf/gogui/version/Version.java" overwrite="true"/>
<replace file="src/net/sf/gogui/version/Version.java" token="@VERSION@"
 value="${version}"/>
<copy
 file="doc/manual/xml/version.xml.in"
 tofile="doc/manual/xml/version.xml" overwrite="true"/>
<replace file="doc/manual/xml/version.xml" token="@VERSION@"
 value="${version}"/>
<copy
 file="mac/packaging/Info.plist.in"
 tofile="mac/packaging/Info.plist" overwrite="true"/>
<replace file="mac/packaging/Info.plist" token="@VERSION@"
 value="${version}"/>
</target>

<target name="version-check-uptodate">
<uptodate property="version-uptodate"
 targetfile="src/net/sf/gogui/version/Version.java">
<srcfiles dir="."
 includes="
  build.properties,
  doc/manual/xml/version.xml.in,
  mac/packaging/Info.plist.in,
  src/version/Version.java.in,
"/>
</uptodate>
</target>

</project>
